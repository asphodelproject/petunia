pub const TokenKind = enum {
    PLUS,
    MINUS,
    STAR,
    SLASH,
    MODULO,
    AMPERSAND,
    PIPE,
    TILDE,
    CARET,
    LEFT_SHIFT,
    RIGHT_SHIFT,
    GREATER_THAN,
    GREATER_THAN_EQUALS,
    LESS_THAN,
    LESS_THAN_EQUALS,
    SINGLE_EQUALS,
    DOUBLE_EQUALS,
    NOT_EQUALS,
    EXCLAMATION,
    LEFT_PAREN,
    RIGHT_PAREN,
    SEMICOLON,
    COLON,
    AT,
    COMMA,

    LET,
    PUB,
    FN,
    RETURN,
    END,
    ENTRY,
    INLINE,
    C_TYPE,
    EMBED,
    NOT,
    AND,
    OR,
    WHILE,
    INTERFACE,
    NEXT,
    STOP,
    IF,
    THEN,

    IDENTIFIER,
    INTEGER,
    STRING,
    TRUE,
    FALSE,
    EMBED_BLOCK,

    NEWLINE,
    CARRIAGE_RETURN,
    WHITE_SPACE,
    BAD,
    EOF,

    pub fn binOpToStr(op: TokenKind) []const u8 {
        return switch (op) {
            TokenKind.PLUS => "+",
            TokenKind.MINUS => "-",
            TokenKind.STAR => "*",
            TokenKind.SLASH => "/",
            TokenKind.MODULO => "%",
            else => "",
        };
    }
};
